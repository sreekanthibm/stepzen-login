# Copyright IBM Corp. 2023
# Made available under the MIT License

name: "Login to StepZen Server"
author: "IBM"
description: |
  Log into StepZen Server

inputs:
  domain:
    description: "StepZen domain (defaults to stepzen.net)"
    required: true
    default: "stepzen.net"
  account:
    description: "StepZen account name"
    required: true
  adminkey:
    description: "Admin key of the StepZen account"
    required: true
  retries:
    description: "Number of retry attempts."
    required: false
    default: "3"
  retryWaitSeconds:
    description: "Time to wait between retries in seconds."
    required: false
    default: "10"

outputs:
  domain:
    description: "Domain the account is logged into."
    value: ${{ steps.output.outputs.domain }}
  account:
    description: "Account that is logged in."
    value: ${{ steps.output.outputs.account }}
  apikey:
    description: "API key for the account."
    value: ${{ steps.output.outputs.apikey }}

runs:
  using: "composite"
  steps:
    # Don't assume the admin key came from a secret so mask it for safety
    - name: mask
      shell: bash
      run: |
        adminkey=${{ inputs.adminkey }}
        echo "::add-mask::${adminkey}"
    - name: "login"
      run: |
        retries=${{ inputs.retries }}
        retry_wait=${{ inputs.retryWaitSeconds }}

        count=0
        until [ $count -ge $retries ]
        do
          stepzen login ${{ inputs.domain }} --account ${{ inputs.account }} --adminkey ${{ inputs.adminkey }} && break
          count=$((count+1))
          sleep $retry_wait
        done
        if [ $count -ge $retries ]; then
          echo "Stepzen login failed after $retries attempts."
          exit 1
        fi        
      shell: bash
    - id: output
      run: |
        apikey=$(stepzen whoami --apikey)
        echo "::add-mask::${apikey}"
        echo "domain=$(stepzen whoami --domain)" >> $GITHUB_OUTPUT
        echo "account=${{ inputs.account }}" >> $GITHUB_OUTPUT
        echo "apikey=${apikey}" >> $GITHUB_OUTPUT
      shell: bash
